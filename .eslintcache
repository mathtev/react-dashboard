[{"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Layout\\Layout.js":"1","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Sidebar\\SidebarLinks\\SidebarLinks.js":"2","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Sidebar\\Sidebar.js":"3","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\notifications\\Notifications.js":"4","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\about\\About.js":"5","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\icon\\Icon.js":"6","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\App.js":"7","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\index.js":"8","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\icon\\icons\\index.js":"9","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\header\\header.js":"10","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\header\\Header.js":"11","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\dashboard\\Dashboard.js":"12","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Widget\\Widget.js":"13","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\tables\\Tables.js":"14","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reportWebVitals.js":"15","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\charts\\MyLineChart.js":"16","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Header\\Header.js":"17","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\charts\\MyBarChart.js":"18","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\posts.js":"19","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\posts.js":"20","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\index.js":"21","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\charts.js":"22","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\login.js":"23","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\login\\Login.js":"24","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\login.js":"25","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\charts.js":"26","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\register\\Register.js":"27","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\Posts.js":"28","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\NewPost.js":"29","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\data\\sequelize.js":"30","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\utils\\date.js":"31","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\PostsList\\PostsList.js":"32","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\EditPost.js":"33"},{"size":1360,"mtime":1622985763115,"results":"34","hashOfConfig":"35"},{"size":2150,"mtime":1616331442562,"results":"36","hashOfConfig":"35"},{"size":1646,"mtime":1616331442562,"results":"37","hashOfConfig":"35"},{"size":879,"mtime":1623534267392,"results":"38","hashOfConfig":"35"},{"size":372,"mtime":1609427330531,"results":"39","hashOfConfig":"35"},{"size":292,"mtime":1609276497745,"results":"40","hashOfConfig":"35"},{"size":1516,"mtime":1623148920718,"results":"41","hashOfConfig":"35"},{"size":727,"mtime":1614120785392,"results":"42","hashOfConfig":"35"},{"size":466,"mtime":1616331539691,"results":"43","hashOfConfig":"35"},{"size":1961,"mtime":1609503151618,"results":"44","hashOfConfig":"35"},{"size":2622,"mtime":1613004818332,"results":"45","hashOfConfig":"35"},{"size":4679,"mtime":1623333349841,"results":"46","hashOfConfig":"35"},{"size":417,"mtime":1612568459404,"results":"47","hashOfConfig":"35"},{"size":9742,"mtime":1616062182862,"results":"48","hashOfConfig":"35"},{"size":362,"mtime":1607896629704,"results":"49","hashOfConfig":"35"},{"size":773,"mtime":1613171299610,"results":"50","hashOfConfig":"35"},{"size":3017,"mtime":1623137606479,"results":"51","hashOfConfig":"35"},{"size":865,"mtime":1613170322279,"results":"52","hashOfConfig":"35"},{"size":2050,"mtime":1623336706397,"results":"53","hashOfConfig":"35"},{"size":6753,"mtime":1623535649520,"results":"54","hashOfConfig":"35"},{"size":205,"mtime":1621454279723,"results":"55","hashOfConfig":"35"},{"size":1126,"mtime":1618699887861,"results":"56","hashOfConfig":"35"},{"size":1262,"mtime":1621626856185,"results":"57","hashOfConfig":"35"},{"size":3959,"mtime":1623140353052,"results":"58","hashOfConfig":"35"},{"size":3695,"mtime":1623148748668,"results":"59","hashOfConfig":"35"},{"size":764,"mtime":1618699114516,"results":"60","hashOfConfig":"35"},{"size":3096,"mtime":1622987509159,"results":"61","hashOfConfig":"35"},{"size":516,"mtime":1623527024482,"results":"62","hashOfConfig":"35"},{"size":2600,"mtime":1623538585147,"results":"63","hashOfConfig":"35"},{"size":238,"mtime":1622393202141,"results":"64","hashOfConfig":"35"},{"size":286,"mtime":1623334861974,"results":"65","hashOfConfig":"35"},{"size":3017,"mtime":1623539162899,"results":"66","hashOfConfig":"35"},{"size":3235,"mtime":1623538079161,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"shat26",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Sidebar\\SidebarLinks\\SidebarLinks.js",["147"],"import React, { useState } from \"react\";\r\nimport cx from 'classnames';\r\nimport { Collapse } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styled from './SidebarLinks.module.scss'\r\nimport Icon from '../../icon/Icon';\r\n\r\nconst SidebarLinks = (props) => {\r\n\r\n  const [collapseOpen, setCollapseOpen] = useState(false);\r\n\r\n  const { clsName, header, headerLink, glyph, collapseLinks } = props;\r\n  if (!collapseLinks) {\r\n    return (\r\n      <li className={styled.sidebarItem}>\r\n        <NavLink\r\n          to={headerLink}\r\n          activeClassName={styled.activeLink}\r\n          exact\r\n        >\r\n          {glyph && <Icon glyph={glyph} />}\r\n          {header}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n  return (\r\n    <li className={styled.sidebarItem}>\r\n      <button\r\n        className={styled.collapseButton}\r\n        onClick={() => setCollapseOpen(!collapseOpen)}\r\n      >\r\n        {glyph && < Icon glyph={glyph} />}\r\n        {header}\r\n        <span className={cx(styled.arrow, { [styled.arrowActive]: collapseOpen })} >\r\n          <Icon glyph=\"leftarrow\" />\r\n        </span>\r\n      </button>\r\n      <Collapse className={styled.panel} isOpen={collapseOpen}>\r\n        <ul>\r\n          {collapseLinks &&\r\n            collapseLinks.map(childLink => (\r\n              <li key={childLink.name}>\r\n                <NavLink\r\n                  to={childLink.link}\r\n                  className={styled.collapseLinks}\r\n                  activeClassName={styled.activeChildLink}\r\n                  exact\r\n                  onClick={() => setCollapseOpen(true)}\r\n                >\r\n                  {childLink.name}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </Collapse>\r\n    </li>\r\n  )\r\n}\r\n\r\nSidebarLinks.propTypes = {\r\n  clsName: PropTypes.string,\r\n  header: PropTypes.node.isRequired,\r\n  headerLink: PropTypes.string,\r\n  glyph: PropTypes.string,\r\n  collapseLinks: PropTypes.array,\r\n};\r\n\r\nSidebarLinks.defaultProps = {\r\n  clsName: '',\r\n  header: null,\r\n  headerLink: null,\r\n  glyph: null,\r\n  collapseLinks: null,\r\n};\r\n\r\nexport default SidebarLinks;",["148","149"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\notifications\\Notifications.js",["150"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addNewPost, fetchPosts } from '../../actions/posts';\r\n\r\nconst Notifications = (props) => {\r\n\r\n  const { fetchPosts, addNewPost } = props;\r\n  const postData = { \r\n    title: 'if this works i will be happy', \r\n    content: 'it will be really awesome if it works' \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    //addNewPost(postData);\r\n  }, [fetchPosts, addNewPost]);\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFetching: state.posts.isFetching,\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchPosts: () => { dispatch(fetchPosts()) },\r\n  addNewPost: (postData) => { dispatch(addNewPost(postData)) },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);",["151","152"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\about\\About.js",[],["153","154"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\icon\\Icon.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\App.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\index.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\icon\\icons\\index.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\header\\header.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\header\\Header.js",["155"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\dashboard\\Dashboard.js",["156"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { BiCoinStack } from 'react-icons/bi';\r\nimport { AiOutlineTwitter } from 'react-icons/ai';\r\nimport { BiWallet, BiCommentError } from 'react-icons/bi';\r\n\r\nimport Widget from '../../components/Widget/Widget';\r\nimport MyLineChart from '../../components/charts/MyLineChart';\r\nimport MyBarChart from '../../components/charts/MyBarChart';\r\nimport styled from './Dashboard.module.scss';\r\nimport { fetchPosts } from '../../actions/posts';\r\nimport { fetchChartsData } from '../../actions/charts';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dashboard = (props) => {\r\n  const { fetchPosts } = props;\r\n  const { fetchChartsData } = props;\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchChartsData();\r\n  }, [fetchPosts, fetchChartsData]);\r\n\r\n  return (\r\n    <div className={styled.root}>\r\n      <Row>\r\n        <Col className=\"col-12 col-sm-6 col-xl-3 pr-4\">\r\n          <Widget footer=\"Updated now\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div>\r\n                <BiCoinStack color=\"gold\" size=\"50px\" />\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <h6 className=\"text-right\">Capacity</h6>\r\n                <h2 className=\"text-right\">150GB</h2>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-6 col-xl-3 pr-4\">\r\n          <Widget footer=\"Last day\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div>\r\n                <BiWallet color=\"brown\" size=\"50px\" />\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <h6 className=\"text-right\">Revenue</h6>\r\n                <h2 className=\"text-right\">$2,405</h2>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-6 col-xl-3 pr-4\">\r\n          <Widget footer=\"Last hour\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div>\r\n                <BiCommentError color=\"red\" size=\"50px\" />\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <h6 className=\"text-right\">Errors</h6>\r\n                <h2 className=\"text-right\">4</h2>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-6 col-xl-3 pr-4\">\r\n          <Widget footer=\"Updated now\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div>\r\n                <AiOutlineTwitter color=\"#00acee\" size=\"50px\" />\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <h6 className=\"text-right\">Followers</h6>\r\n                <h2 className=\"text-right\">+30</h2>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-xl-6\">\r\n          <Widget>\r\n            <h3>Line Chart</h3>\r\n            <p className=\"text-muted\">24 hour performance</p>\r\n            {props.chartsData && <MyLineChart data={props.chartsData} />}\r\n          </Widget>\r\n        </Col>\r\n        <Col className=\"col-xl-6\">\r\n          <Widget>\r\n            <h3>Bar Chart</h3>\r\n            <p className=\"text-muted\">24 hour performance</p>\r\n            {props.chartsData && <MyBarChart data={props.chartsData} />}\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-xl-6\">\r\n          <Widget>\r\n            <h3>Posts</h3>\r\n            <hr />\r\n            {props.posts &&\r\n              props.posts.slice(0, 6).map((post) => (\r\n                <p key={post.id}>\r\n                  {post.title}\r\n                  <span className=\"pull-right text-muted\">\r\n                    {post.updatedAt ? post.updatedAt : post.createdAt}\r\n                  </span>\r\n                </p>\r\n              ))}\r\n            <hr />\r\n            <NavLink to={'/app/posts'} exact>\r\n              See all posts\r\n            </NavLink>\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFetchingPosts: state.posts.isFetching,\r\n  isFetchingChartsData: state.charts.isFetching,\r\n  posts: state.posts.posts,\r\n  chartsData: state.charts.chartsData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchPosts: () => {\r\n    dispatch(fetchPosts());\r\n  },\r\n  fetchChartsData: () => {\r\n    dispatch(fetchChartsData());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Widget\\Widget.js",[],["157","158"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reportWebVitals.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\charts\\MyLineChart.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\Header\\Header.js",["159"],"import React, { useState } from 'react';\r\nimport cx from 'classnames';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\n\r\nimport { AiOutlineSearch, AiFillBell } from 'react-icons/ai';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { GrMail } from 'react-icons/gr';\r\nimport { RiArrowDropDownLine } from 'react-icons/ri';\r\nimport faceImg from '../../images/face.jpeg';\r\n\r\nimport styled from './Header.module.scss';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/login';\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const doLogout = () => {\r\n    props.logoutUser();\r\n  }\r\n\r\n  return (\r\n    <Navbar className={styled.root}>\r\n      <Nav>\r\n        <NavItem className={cx(styled.navBars, styled.headerIcon)}>\r\n          <Button onClick={props.toggleSidebar}>\r\n            <FaBars />\r\n          </Button>\r\n        </NavItem>\r\n        <NavItem>\r\n          <InputGroup>\r\n            <Input placeholder=\"Search for...\" />\r\n            <InputGroupAddon addonType=\"append\" className=\"px-2\">\r\n              <AiOutlineSearch />\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </NavItem>\r\n      </Nav>\r\n      <Nav className=\"ml-auto\">\r\n        <NavItem className={styled.headerIcon}>\r\n          <Button>\r\n            <GrMail />\r\n            <span className=\"badge badge-pill badge-primary\">12</span>\r\n          </Button>\r\n        </NavItem>\r\n        <NavItem className={styled.headerIcon}>\r\n          <Button>\r\n            <AiFillBell />\r\n            <span className=\"badge badge-pill badge-primary\">1</span>\r\n          </Button>\r\n        </NavItem>\r\n        <Dropdown className={cx(styled.dropdown, \"ml-3\")} isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n          <DropdownToggle nav>\r\n            <img className={cx('rounded-circle mr-sm', styled.faceImg)} src={faceImg} alt=\"face img\" />\r\n            <span>Administrator</span>\r\n            <RiArrowDropDownLine />\r\n          </DropdownToggle>\r\n          <DropdownMenu style={{width: '100%'}}>\r\n            <DropdownItem>\r\n              <NavLink to=\"/app/profile\">Profile</NavLink>\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              <NavLink to=\"/app/posts\">Posts</NavLink>\r\n            </DropdownItem>\r\n            <DropdownItem onClick={doLogout}>\r\n              Logout\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: state.login.isAuthenticated,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logoutUser: () => {\r\n    dispatch(logoutUser());\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\components\\charts\\MyBarChart.js",[],["160","161"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\posts.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\posts.js",["162"],"import { getCurrentDate } from '../utils/date';\r\n\r\nexport const ADD_NEW_POST_SUCCESS = 'ADD_NEW_POST_SUCCESS';\r\nexport const ADD_NEW_POST_FAILURE = 'ADD_NEW_POST_FAILURE';\r\nexport const FETCH_POST_BY_ID_SUCCESS = 'FETCH_POST_BY_ID_SUCCESS';\r\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\r\nexport const FETCH_POST_FAILURE = 'FETCH_POST_FAILURE';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\nexport const FETCH_POST_REQUEST = 'FETCH_POST_REQUEST';\r\n\r\nconst addNewPostSuccess = (post) => ({\r\n  type: ADD_NEW_POST_SUCCESS,\r\n  isFetching: false,\r\n  post,\r\n});\r\n\r\nconst addNewPostFailure = (message) => ({\r\n  type: ADD_NEW_POST_FAILURE,\r\n  isFetching: false,\r\n  message,\r\n});\r\n\r\nconst fetchPostByIdSuccess = (post) => ({\r\n  type: FETCH_POST_BY_ID_SUCCESS,\r\n  isFetching: false,\r\n  post,\r\n});\r\n\r\nconst deletePostSuccess = (postId) => ({\r\n  type: DELETE_POST_SUCCESS,\r\n  isFetching: false,\r\n  postId,\r\n});\r\n\r\nconst deletePostFailure = (message) => ({\r\n  type: DELETE_POST_FAILURE,\r\n  isFetching: false,\r\n  message,\r\n});\r\n\r\nconst fetchPostRequest = () => ({\r\n  type: FETCH_POST_REQUEST,\r\n  isFetching: true,\r\n});\r\n\r\nconst fetchPostSuccess = (posts) => ({\r\n  type: FETCH_POST_SUCCESS,\r\n  isFetching: false,\r\n  posts,\r\n});\r\n\r\nconst fetchPostFailure = (message) => ({\r\n  type: FETCH_POST_FAILURE,\r\n  isFetching: false,\r\n  message,\r\n});\r\n\r\nconst updatePostSuccess = (post) => ({\r\n  type: UPDATE_POST_SUCCESS,\r\n  isFetching: false,\r\n  post,\r\n});\r\n\r\nconst updatePostFailure = (message) => ({\r\n  type: UPDATE_POST_FAILURE,\r\n  isFetching: false,\r\n  message,\r\n});\r\n\r\nexport const fetchPosts = () => {\r\n  const fetchConfig = {\r\n    mode: 'cors',\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: '{allPosts{id,title,content,updatedAt,createdAt}}',\r\n    }),\r\n  };\r\n  return (dispatch) => {\r\n    return fetch('http://localhost:4000/graphql', fetchConfig)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseJson) => {\r\n        return responseJson.data.allPosts;\r\n      })\r\n      .then((posts) => {\r\n        if (!posts) {\r\n          dispatch(fetchPostFailure(\"Couldn't fetch posts\"));\r\n          return Promise.reject(posts);\r\n        } else {\r\n          dispatch(fetchPostSuccess(posts));\r\n          return Promise.resolve(posts);\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchPostById = (postId) => {\r\n  const fetchConfig = {\r\n    mode: 'cors',\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{postById(id: ${postId}){id,title,content,updatedAt}}`,\r\n    }),\r\n  };\r\n  return (dispatch) => {\r\n    return fetch('http://localhost:4000/graphql', fetchConfig)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        return responseJson.data.postById;\r\n      })\r\n      .then((post) => {\r\n        if (!post) {\r\n          dispatch(fetchPostFailure(\"Couldn't fetch posts\"));\r\n          return Promise.reject(post);\r\n        } else {\r\n          dispatch(fetchPostByIdSuccess(post));\r\n          return Promise.resolve(post);\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const addNewPost = (postData) => {\r\n  const fetchConfig = {\r\n    mode: 'cors',\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation {\r\n        addPost(title: \"${postData.title}\", content: \"${\r\n        postData.content\r\n      }\", createdAt: \"${getCurrentDate()}\") {\r\n          id,\r\n          title,\r\n          content,\r\n          updatedAt,\r\n          createdAt\r\n        }\r\n      }`,\r\n    }),\r\n  };\r\n  return (dispatch) => {\r\n    return fetch('http://localhost:4000/graphql', fetchConfig)\r\n      .then((response) =>\r\n        response.json().then((responseJson) => ({\r\n          responseJson,\r\n          response,\r\n        }))\r\n      )\r\n      .then(({ responseJson, response }) => {\r\n        const post = responseJson.data.addPost;\r\n        console.log(post);\r\n        if (response.ok) {\r\n          dispatch(addNewPostSuccess(post));\r\n          return Promise.resolve(post);\r\n        } else {\r\n          dispatch(\r\n            addNewPostFailure(\r\n              'Could not create a post, check addNewPost() action'\r\n            )\r\n          );\r\n          return Promise.reject();\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  const fetchConfig = {\r\n    mode: 'cors',\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation {\r\n                deletePost(\r\n                  id: ${id})  {\r\n                    id\r\n                  }\r\n                }`,\r\n    }),\r\n  };\r\n  return (dispatch) => {\r\n    return fetch('http://localhost:4000/graphql', fetchConfig).then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          dispatch(deletePostSuccess(id));\r\n          return Promise.resolve();\r\n        } else {\r\n          dispatch(\r\n            deletePostFailure(\r\n              'Could not delete a post, check deletePost() action'\r\n            )\r\n          );\r\n          return Promise.reject();\r\n        }\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\nexport const updatePost = (data) => {\r\n  const fetchConfig = {\r\n    mode: 'cors',\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation {\r\n                updatePost(id: ${data.id},title: \"${data.title}\",content: \"${data.content}\") {\r\n                  id,\r\n                  title,\r\n                  content,\r\n                  updatedAt,\r\n                  createdAt\r\n                }\r\n              }`,\r\n    }),\r\n  };\r\n  return (dispatch) => {\r\n    return fetch('http://localhost:4000/graphql', fetchConfig)\r\n      .then((response) =>\r\n        response.json().then((responseJson) => ({ responseJson, response }))\r\n      )\r\n      .then(({ response }) => {\r\n        if (response.ok) {\r\n          dispatch(updatePostSuccess(data));\r\n          return Promise.resolve(data);\r\n        } else {\r\n          dispatch(\r\n            updatePostFailure(\r\n              'Could not update a post, check updatePost() action'\r\n            )\r\n          );\r\n          return Promise.reject();\r\n        }\r\n      });\r\n  };\r\n};\r\n","C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\index.js",[],["163","164"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\charts.js",["165"],"export const FETCH_CHARTS_DATA_SUCCESS = 'FETCH_CHARTS_DATA_SUCCESS';\r\nexport const FETCH_CHARTS_DATA_FAILURE = 'FETCH_CHARTS_DATA_FAILURE';\r\nexport const FETCH_CHARTS_DATA_REQUEST = 'FETCH_CHARTS_DATA_REQUEST';\r\n\r\n\r\nconst fetchChartsDataRequest = () => ({\r\n  type: FETCH_CHARTS_DATA_REQUEST,\r\n  isFetching: false,\r\n});\r\n\r\nconst fetchChartsDataSuccess = (chartsData) => ({\r\n  type: FETCH_CHARTS_DATA_SUCCESS,\r\n  isFetching: false,\r\n  chartsData\r\n});\r\n\r\nconst fetchChartsDataFailure = (message) => ({\r\n  type: FETCH_CHARTS_DATA_FAILURE,\r\n  isFetching: false,\r\n  message\r\n});\r\n\r\n\r\nexport const fetchChartsData = () => {\r\n  return dispatch => {\r\n    fetch('http://localhost:4000/api/charts').then(response => {\r\n      return response.json();\r\n    }).then(responseJson => {\r\n      return responseJson;\r\n    }).then(data => {\r\n      if (!data) {\r\n        dispatch(fetchChartsDataFailure(\"Couldn't fetch charts data\"));\r\n        return Promise.reject(data);\r\n      } else {\r\n        dispatch(fetchChartsDataSuccess(data));\r\n        return Promise.resolve(data);\r\n      }\r\n    }).catch(err => console.error('Error: ', err));\r\n  }\r\n};",["166","167"],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\login.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\login\\Login.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\actions\\login.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\reducers\\charts.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\register\\Register.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\Posts.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\NewPost.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\data\\sequelize.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\utils\\date.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\PostsList\\PostsList.js",[],"C:\\Users\\matht\\OneDrive\\Pulpit\\my dashboard\\react-dashboard-v1\\src\\pages\\posts\\postsComponents\\EditPost.js",["168"],{"ruleId":"169","severity":1,"message":"170","line":14,"column":11,"nodeType":"171","messageId":"172","endLine":14,"endColumn":18},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":9,"column":9,"nodeType":"171","messageId":"172","endLine":9,"endColumn":17},{"ruleId":"173","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"173","replacedBy":"180"},{"ruleId":"175","replacedBy":"181"},{"ruleId":"169","severity":1,"message":"182","line":21,"column":10,"nodeType":"171","messageId":"172","endLine":21,"endColumn":22},{"ruleId":"169","severity":1,"message":"183","line":2,"column":20,"nodeType":"171","messageId":"172","endLine":2,"endColumn":26},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"169","severity":1,"message":"186","line":24,"column":19,"nodeType":"171","messageId":"172","endLine":24,"endColumn":27},{"ruleId":"173","replacedBy":"187"},{"ruleId":"175","replacedBy":"188"},{"ruleId":"169","severity":1,"message":"189","line":44,"column":7,"nodeType":"171","messageId":"172","endLine":44,"endColumn":23},{"ruleId":"173","replacedBy":"190"},{"ruleId":"175","replacedBy":"191"},{"ruleId":"169","severity":1,"message":"192","line":6,"column":7,"nodeType":"171","messageId":"172","endLine":6,"endColumn":29},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","replacedBy":"194"},{"ruleId":"169","severity":1,"message":"195","line":17,"column":9,"nodeType":"171","messageId":"172","endLine":17,"endColumn":13},"no-unused-vars","'clsName' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'postData' is assigned a value but never used.",["196"],["197"],["196"],["197"],"'IoMdSettings' is defined but never used.","'Button' is defined but never used.",["196"],["197"],"'Redirect' is defined but never used.",["196"],["197"],"'fetchPostRequest' is assigned a value but never used.",["196"],["197"],"'fetchChartsDataRequest' is assigned a value but never used.",["196"],["197"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]